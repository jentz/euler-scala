package problem2

/**
 * Each new term in the Fibonacci sequence is generated by adding the 
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four 
 * million, find the sum of the even-valued terms.
 */
object Problem2 extends App {

  def fib(num: Int) : Int = num match {
    case 0 | 1 => num
    case _ => fib(num - 1) + fib(num - 2)
  }
  
  def sumEvenFibs(max : Int) : Int = {
    var sum = 0
    var next = 0
    var i = 0
    while (next < max) {
      next = fib(i)
      if (next % 2 == 0) {
        sum += next
      }
      i += 1
    }
    sum
  }
  
  println(sumEvenFibs(4000000))
}